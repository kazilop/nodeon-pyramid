#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook Telegram –±–æ—Ç–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω –≤–µ—Ä—Å–∏–∏
"""

import requests
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def setup_webhook():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞"""
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
    webhook_url = os.getenv('TELEGRAM_WEBHOOK_URL')
    
    if not bot_token:
        print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return False
    
    if not webhook_url:
        print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_WEBHOOK_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return False
    
    # URL –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook
    webhook_setup_url = f"https://api.telegram.org/bot{bot_token}/setWebhook"
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è webhook
    webhook_data = {
        'url': webhook_url,
        'allowed_updates': ['message', 'callback_query']
    }
    
    try:
        print(f"üîó –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook: {webhook_url}")
        
        response = requests.post(webhook_setup_url, data=webhook_data, timeout=30)
        response.raise_for_status()
        
        result = response.json()
        
        if result.get('ok'):
            print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
            print(f"üì° URL: {webhook_url}")
            print(f"üìä –û–ø–∏—Å–∞–Ω–∏–µ: {result.get('description', 'N/A')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook: {result.get('description', 'Unknown error')}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def check_webhook():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ webhook"""
    
    bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
    if not bot_token:
        print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        webhook_info_url = f"https://api.telegram.org/bot{bot_token}/getWebhookInfo"
        response = requests.get(webhook_info_url, timeout=30)
        response.raise_for_status()
        
        result = response.json()
        
        if result.get('ok'):
            webhook_info = result.get('result', {})
            print("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:")
            print(f"   URL: {webhook_info.get('url', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')}")
            print(f"   –°—Ç–∞—Ç—É—Å: {'‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' if webhook_info.get('url') else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
            print(f"   –û—à–∏–±–æ–∫: {webhook_info.get('pending_update_count', 0)}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {result.get('description', 'Unknown error')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ NodeOn Pyramid - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Webhook")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π webhook
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π webhook...")
    check_webhook()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
    print("\n2Ô∏è‚É£ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook...")
    if setup_webhook():
        print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
        check_webhook()
        print("\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüì± –¢–µ–ø–µ—Ä—å –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ!")
    else:
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ.")

if __name__ == "__main__":
    main()
