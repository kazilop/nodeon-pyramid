# NodeOn Pyramid - PowerShell —Å–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ –Ω–æ–≤—ã–π Railway
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\migrate_to_new_railway.ps1

param(
    [switch]$SkipDependencies,
    [switch]$SkipDatabase,
    [switch]$SkipBot
)

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
function Write-Log {
    param([string]$Message)
    Write-Host "[$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')] $Message" -ForegroundColor Blue
}

function Write-Success {
    param([string]$Message)
    Write-Host "‚úÖ $Message" -ForegroundColor Green
}

function Write-Warning {
    param([string]$Message)
    Write-Host "‚ö†Ô∏è  $Message" -ForegroundColor Yellow
}

function Write-Error {
    param([string]$Message)
    Write-Host "‚ùå $Message" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function Test-Dependencies {
    Write-Log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    $dependencies = @{
        "Python3" = "python"
        "pip3" = "pip"
        "Git" = "git"
        "Node.js" = "node"
        "npm" = "npm"
    }
    
    foreach ($name in $dependencies.Keys) {
        $command = $dependencies[$name]
        if (Get-Command $command -ErrorAction SilentlyContinue) {
            Write-Success "$name —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        } else {
            Write-Error "$name –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            exit 1
        }
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Railway CLI
    if (Get-Command railway -ErrorAction SilentlyContinue) {
        Write-Success "Railway CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    } else {
        Write-Warning "Railway CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        npm install -g @railway/cli
    }
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
function Install-Dependencies {
    Write-Log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    pip install -r requirements.txt
    Write-Success "Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Railway
function Setup-Railway {
    Write-Log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Railway..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    try {
        railway whoami | Out-Null
        Write-Success "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Railway –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
    } catch {
        Write-Warning "–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Railway"
        railway login
    }
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
    Write-Log "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ Railway..."
    railway new --name "nodeon-pyramid"
    Write-Success "Railway –ø—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
function Setup-Environment {
    Write-Log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    Write-Host "–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:" -ForegroundColor Cyan
    Write-Host ""
    
    $SUPABASE_URL = Read-Host "SUPABASE_URL"
    $SUPABASE_ANON_KEY = Read-Host "SUPABASE_ANON_KEY"
    $TELEGRAM_BOT_TOKEN = Read-Host "TELEGRAM_BOT_TOKEN"
    $DEVELOPER_TELEGRAM_ID = Read-Host "DEVELOPER_TELEGRAM_ID"
    $SECRET_KEY = Read-Host "SECRET_KEY (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏)"
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SECRET_KEY –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω
    if ([string]::IsNullOrEmpty($SECRET_KEY)) {
        $SECRET_KEY = -join ((1..32) | ForEach {Get-Random -InputObject (0..9 + 'A'..'F')})
        Write-Log "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω SECRET_KEY: $SECRET_KEY"
    }
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Railway
    railway variables set SUPABASE_URL="$SUPABASE_URL"
    railway variables set SUPABASE_ANON_KEY="$SUPABASE_ANON_KEY"
    railway variables set TELEGRAM_BOT_TOKEN="$TELEGRAM_BOT_TOKEN"
    railway variables set DEVELOPER_TELEGRAM_ID="$DEVELOPER_TELEGRAM_ID"
    railway variables set SECRET_KEY="$SECRET_KEY"
    railway variables set PORT="8000"
    railway variables set HOST="0.0.0.0"
    
    Write-Success "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –î–µ–ø–ª–æ–π –Ω–∞ Railway
function Deploy-ToRailway {
    Write-Log "–î–µ–ø–ª–æ–π –Ω–∞ Railway..."
    railway up
    Write-Success "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
function Setup-Database {
    if ($SkipDatabase) {
        Write-Warning "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
        return
    }
    
    Write-Log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    python setup_database.py
    Write-Success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Bot
function Setup-TelegramBot {
    if ($SkipBot) {
        Write-Warning "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É Telegram Bot"
        return
    }
    
    Write-Log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Bot..."
    python setup_telegram_bot.py
    Write-Success "Telegram Bot –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
function Test-System {
    Write-Log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    python check_system.py
    Write-Success "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function Get-AppUrl {
    Write-Log "–ü–æ–ª—É—á–µ–Ω–∏–µ URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    try {
        $APP_URL = railway domain
        if ($APP_URL) {
            Write-Success "URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: https://$APP_URL"
            $APP_URL | Out-File -FilePath "app_url.txt" -Encoding UTF8
        } else {
            Write-Warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        }
    } catch {
        Write-Warning "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $_"
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    Write-Host ""
    Write-Host "üöÄ NodeOn Pyramid - –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ –Ω–æ–≤—ã–π Railway" -ForegroundColor Blue
    Write-Host "==============================================" -ForegroundColor Blue
    Write-Host ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if (-not (Test-Path "main.py")) {
        Write-Error "–§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞."
        exit 1
    }
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —à–∞–≥–∏ –º–∏–≥—Ä–∞—Ü–∏–∏
    if (-not $SkipDependencies) {
        Test-Dependencies
        Install-Dependencies
    }
    
    Setup-Railway
    Setup-Environment
    Deploy-ToRailway
    
    # –ñ–¥–µ–º, –ø–æ–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
    Write-Log "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    Start-Sleep -Seconds 30
    
    Setup-Database
    Setup-TelegramBot
    Get-AppUrl
    Test-System
    
    Write-Host ""
    Write-Host "üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    Write-Host "================================" -ForegroundColor Green
    Write-Host ""
    
    if (Test-Path "app_url.txt") {
        $APP_URL = Get-Content "app_url.txt"
        Write-Host "üì± URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: https://$APP_URL" -ForegroundColor Cyan
        Write-Host "ü§ñ –û–±–Ω–æ–≤–∏—Ç–µ webhook –≤ BotFather: https://$APP_URL/api/telegram/webhook" -ForegroundColor Cyan
        Write-Host "üìù –û–±–Ω–æ–≤–∏—Ç–µ Menu Button –≤ BotFather: https://$APP_URL" -ForegroundColor Cyan
    }
    
    Write-Host ""
    Write-Host "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Yellow
    Write-Host "   1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start"
    Write-Host "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    Write-Host "   3. –û–±–Ω–æ–≤–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é"
    Write-Host "   4. –£–≤–µ–¥–æ–º–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ –Ω–æ–≤–æ–º URL"
    
    Write-Host ""
    Write-Host "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Yellow
    Write-Host "   railway logs          - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
    Write-Host "   railway shell         - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É"
    Write-Host "   make check            - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
    Write-Host "   make setup-db         - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ë–î"
    Write-Host "   make setup-bot        - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
$ErrorActionPreference = "Stop"

try {
    # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    Main
} catch {
    Write-Error "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞: $_"
    exit 1
}
