#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø—É—Å–∫–∞ Mini App
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_BOT_TOKEN = "7670372637:AAG7XWbNkhvNx_M4MI4118AYXvIsn3bRMDQ"

def update_bot_commands():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/setMyCommands"
    
    commands = [
        {
            "command": "start",
            "description": "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å NodeOn Pyramid Mini App"
        },
        {
            "command": "help",
            "description": "‚ùì –ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
        },
        {
            "command": "balance",
            "description": "üí∞ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å NDN –∏ Stars"
        },
        {
            "command": "referrals",
            "description": "üë• –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
        },
        {
            "command": "leaderboard",
            "description": "üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤"
        },
        {
            "command": "buy_pro",
            "description": "‚≠ê –ö—É–ø–∏—Ç—å Pro —Å—Ç–∞—Ç—É—Å –∑–∞ 1000 NDN"
        },
        {
            "command": "buy_ndn",
            "description": "üíé –ö—É–ø–∏—Ç—å NDN –∑–∞ Telegram Stars"
        },
        {
            "command": "withdraw",
            "description": "üí∏ –í—ã–≤–µ—Å—Ç–∏ NDN –≤ Telegram Stars"
        },
        {
            "command": "terms",
            "description": "üìã –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"
        },
        {
            "command": "support",
            "description": "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        },
        {
            "command": "paysupport",
            "description": "üí≥ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π"
        }
    ]
    
    data = {"commands": commands}
    
    try:
        response = requests.post(url, json=data)
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
                for cmd in commands:
                    print(f"   /{cmd['command']} - {cmd['description']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥: {result}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def set_bot_description():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è –±–æ—Ç–∞"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/setMyDescription"
    
    description = """üéâ NodeOn Pyramid - –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –∏–≥—Ä–∞ —Å –º–æ–Ω–µ—Ç–∞–º–∏ NDN

üí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ NDN –º–æ–Ω–µ—Ç—ã
‚≠ê –ü–æ–∫—É–ø–∞–π—Ç–µ Pro —Å—Ç–∞—Ç—É—Å –∑–∞ 1000 NDN
üë• –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –Ω–∞–≥—Ä–∞–¥—ã
üèÜ –°—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º

üöÄ –ù–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!"""
    
    data = {"description": description}
    
    try:
        response = requests.post(url, json=data)
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
                print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {description[:50]}...")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è: {result}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def set_bot_short_description():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –±–æ—Ç–∞"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/setMyShortDescription"
    
    short_description = "üéâ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –∏–≥—Ä–∞ —Å –º–æ–Ω–µ—Ç–∞–º–∏ NDN. –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ, –ø—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π, —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º!"
    
    data = {"short_description": short_description}
    
    try:
        response = requests.post(url, json=data)
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
                print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {short_description}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è: {result}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Telegram –±–æ—Ç–∞ @pro_stars_bot")
    print("=" * 50)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã
    print("\n1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥:")
    update_bot_commands()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
    print("\n2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è:")
    set_bot_description()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    print("\n3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è:")
    set_bot_short_description()
    
    print("\n" + "=" * 50)
    print("üéâ –ë–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω!")
    print("üîó –°—Å—ã–ª–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Mini App:")
    print("   https://t.me/pro_stars_bot?startapp=nodeon_pyramid")
    print("\nüì± –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç:")
    print("   1. –ù–∞–∂–∞—Ç—å /start")
    print("   2. –ù–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É 'üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å NodeOn Pyramid'")
    print("   3. –ò–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ")

if __name__ == "__main__":
    main()
