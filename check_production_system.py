#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–∏—Å—Ç–µ–º—ã NodeOn Pyramid
"""

import requests
import json
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
RAILWAY_URL = "https://nodeon-production.up.railway.app"
API_BASE = f"{RAILWAY_URL}/api"
GITHUB_PAGES_URL = "https://kazilop.github.io/nodeon-pyramid/"

def check_railway_backend():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Railway –±—ç–∫–µ–Ω–¥–∞"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ Railway –±—ç–∫–µ–Ω–¥–∞")
    print("-" * 40)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ API
        response = requests.get(f"{API_BASE}/test", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç: {data.get('message')}")
            return True
        else:
            print(f"‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return False

def check_github_pages():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub Pages —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"""
    print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub Pages —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞")
    print("-" * 40)
    
    try:
        response = requests.get(GITHUB_PAGES_URL, timeout=10)
        if response.status_code == 200:
            content = response.text
            if "NodeOn Pyramid" in content and "Telegram" in content:
                print("‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç")
                return True
            else:
                print("‚ö†Ô∏è –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ–ø–æ–ª–Ω—ã–π")
                return False
        else:
            print(f"‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É: {e}")
        return False

def check_telegram_auth():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram"""
    print("\nüîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram")
    print("-" * 40)
    
    # –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram –∏–∑ –ª–æ–≥–æ–≤
    real_telegram_data = "query_id%3DAAFn7WQMAAAAAGftZAynMETx%26user%3D%257B%2522id%2522%253A207940967%252C%2522first_name%2522%253A%2522Fish%2522%252C%2522last_name%2522%253A%2522%2522%252C%2522username%2522%253A%2522NobodyYety%2522%252C%2522language_code%2522%253A%2522ru%2522%252C%2522is_premium%2522%253Atrue%252C%2522allows_write_to_pm%2522%253Atrue%252C%2522photo_url%2522%253A%2522https%253A%255C%252F%255C%252Ft.me%255C%252Fi%255C%252Fuserpic%255C%252F320%255C%252F6ZhmPb8VHMum-L3NuklXZIDjzwG5z3nmsPstk-j-X0Q.svg%2522%257D%26auth_date%3D1759595069%26signature%3DzaTxfsbclaZwvnfSR1fy86Yr9_TDYfYKlbdlIDCI0CZHOte_WZ8DHcUuIxv7RVqoiuiux-yZqP-ZMMNLSnefDQ%26hash%3D5bd316b59632460d35963101eac62a76f2538fb18b5958ad6f9114f0931e29f9"
    
    try:
        # –¢–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        response = requests.get(f"{API_BASE}/user/profile?init_data={real_telegram_data}")
        if response.status_code == 200:
            data = response.json()
            user = data.get('user', {})
            print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç: {user.get('first_name')}")
            print(f"   –ë–∞–ª–∞–Ω—Å: {user.get('balance_ndn')} NDN")
            print(f"   Pro —Å—Ç–∞—Ç—É—Å: {user.get('is_pro')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_stars_functionality():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ Stars"""
    print("\n‚≠ê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ Stars")
    print("-" * 40)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Stars
        response = requests.get(f"{API_BASE}/stars/config")
        if response.status_code == 200:
            data = response.json()
            config = data.get('config', {})
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Stars –¥–æ—Å—Ç—É–ø–Ω–∞:")
            print(f"   –ö—É—Ä—Å: 1 Star = {config.get('stars_to_ndn_rate')} NDN")
            print(f"   –ú–∏–Ω–∏–º—É–º: {config.get('min_stars_purchase')} Stars")
            print(f"   –ú–∞–∫—Å–∏–º—É–º: {config.get('max_stars_purchase')} Stars")
            return True
        else:
            print(f"‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Stars –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_referral_system():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüîó –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã")
    print("-" * 40)
    
    real_telegram_data = "query_id%3DAAFn7WQMAAAAAGftZAynMETx%26user%3D%257B%2522id%2522%253A207940967%252C%2522first_name%2522%253A%2522Fish%2522%252C%2522last_name%2522%253A%2522%2522%252C%2522username%2522%253A%2522NobodyYety%2522%252C%2522language_code%2522%253A%2522ru%2522%252C%2522is_premium%2522%253Atrue%252C%2522allows_write_to_pm%2522%253Atrue%252C%2522photo_url%2522%253A%2522https%253A%255C%252F%255C%252Ft.me%255C%252Fi%255C%252Fuserpic%255C%252F320%255C%252F6ZhmPb8VHMum-L3NuklXZIDjzwG5z3nmsPstk-j-X0Q.svg%2522%257D%26auth_date%3D1759595069%26signature%3DzaTxfsbclaZwvnfSR1fy86Yr9_TDYfYKlbdlIDCI0CZHOte_WZ8DHcUuIxv7RVqoiuiux-yZqP-ZMMNLSnefDQ%26hash%3D5bd316b59632460d35963101eac62a76f2538fb18b5958ad6f9114f0931e29f9"
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        response = requests.get(f"{API_BASE}/stats/referrals?init_data={real_telegram_data}")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
            print(f"   –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {data.get('total_referrals')}")
            return True
        else:
            print(f"‚ùå –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_leaderboard():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤"""
    print("\nüèÜ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤")
    print("-" * 40)
    
    try:
        response = requests.get(f"{API_BASE}/stats/leaderboard")
        if response.status_code == 200:
            data = response.json()
            leaders = data.get('leaders', [])
            print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏–¥–µ—Ä–æ–≤: {len(leaders)}")
            if leaders:
                top_leader = leaders[0]
                print(f"   –¢–æ–ø-1: {top_leader.get('first_name')} - {top_leader.get('balance_ndn')} NDN")
            return True
        else:
            print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üöÄ –ü–†–û–í–ï–†–ö–ê –ü–†–û–î–ê–ö–®–ù –°–ò–°–¢–ï–ú–´ NODEON PYRAMID")
    print("=" * 60)
    
    results = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    results.append(("Railway Backend", check_railway_backend()))
    results.append(("GitHub Pages Frontend", check_github_pages()))
    results.append(("Telegram Auth", check_telegram_auth()))
    results.append(("Stars Functionality", check_stars_functionality()))
    results.append(("Referral System", check_referral_system()))
    results.append(("Leaderboard", check_leaderboard()))
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    total_checks = len(results)
    passed_checks = sum(1 for _, status in results if status)
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò")
    print("=" * 60)
    
    for name, status in results:
        status_icon = "‚úÖ" if status else "‚ùå"
        print(f"{status_icon} {name}")
    
    print(f"\nüìà –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {passed_checks}/{total_checks} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    if passed_checks == total_checks:
        print("\nüéâ –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –†–ê–ë–û–¢–ê–Æ–¢!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        print(f"üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥: {GITHUB_PAGES_URL}")
        print(f"üîß API: {RAILWAY_URL}")
    else:
        print(f"\n‚ö†Ô∏è {total_checks - passed_checks} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Telegram –±–æ—Ç–∞")
    print("2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç –≤ Supabase")
    print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram")

if __name__ == "__main__":
    main()
