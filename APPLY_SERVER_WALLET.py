#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ NodeOn —Å 1 –º–ª—Ä–¥ NDN
"""

import requests
import json
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase
SUPABASE_URL = "https://ahxwpzgltlzlvrtrbanm.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFoeHdwemdsdGx6bHZydHJiYW5tIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk1MDMxNDksImV4cCI6MjA3NTA3OTE0OX0.h4sMVhVwvRUiHgbevDgv9W1G2S__uDWPUSCiXdrEy4E"

def get_supabase_headers():
    return {
        "apikey": SUPABASE_ANON_KEY,
        "Authorization": f"Bearer {SUPABASE_ANON_KEY}",
        "Content-Type": "application/json"
    }

def execute_sql(sql_content):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç SQL —á–µ—Ä–µ–∑ Supabase RPC"""
    try:
        response = requests.post(
            f"{SUPABASE_URL}/rest/v1/rpc/exec_sql",
            headers=get_supabase_headers(),
            json={"sql": sql_content}
        )
        
        if response.status_code == 200:
            return True, response.json()
        else:
            return False, f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL: {response.status_code} - {response.text}"
    except Exception as e:
        return False, f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}"

def create_server_wallet():
    """–°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ—à–µ–ª–µ–∫"""
    print("üè¶ –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ NodeOn...")
    
    # –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª
    try:
        with open('CREATE_SERVER_WALLET.sql', 'r', encoding='utf-8') as f:
            sql_content = f.read()
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª CREATE_SERVER_WALLET.sql –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º SQL
    success, result = execute_sql(sql_content)
    
    if success:
        print("‚úÖ –°–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞: {result}")
        return False

def check_wallet_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–æ—à–µ–ª—å–∫–∞"""
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ—à–µ–ª—å–∫–∞...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É –∫–æ—à–µ–ª—å–∫–∞
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/nodeon_server_wallet",
            headers=get_supabase_headers()
        )
        
        if response.status_code == 200:
            wallets = response.json()
            if wallets:
                wallet = wallets[0]
                print(f"üí∞ –ë–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞: {wallet['balance_ndn']:,.2f} NDN")
                print(f"üìà –í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–Ω–æ: {wallet['total_sold_ndn']:,.2f} NDN")
                print(f"‚≠ê –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ Stars: {wallet['total_earned_stars']:,.2f}")
                return True
            else:
                print("‚ùå –ö–æ—à–µ–ª–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def test_wallet_functions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ—à–µ–ª—å–∫–∞"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –∫–æ—à–µ–ª—å–∫–∞...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é get_wallet_stats
        response = requests.post(
            f"{SUPABASE_URL}/rest/v1/rpc/get_wallet_stats",
            headers=get_supabase_headers()
        )
        
        if response.status_code == 200:
            stats = response.json()
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è get_wallet_stats —Ä–∞–±–æ—Ç–∞–µ—Ç:")
            print(f"   –ë–∞–ª–∞–Ω—Å: {stats['wallet_balance']:,.2f} NDN")
            print(f"   –ü—Ä–æ–¥–∞–Ω–æ: {stats['total_sold']:,.2f} NDN")
            print(f"   Stars: {stats['total_earned_stars']:,.2f}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ NodeOn Server Wallet Setup")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ—à–µ–ª–µ–∫
    if create_server_wallet():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        if check_wallet_status():
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
            test_wallet_functions()
            
            print("\n‚úÖ –°–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
            print("üí∞ –í –∫–æ—à–µ–ª—å–∫–µ: 1,000,000,000 NDN")
            print("üîÑ –ì–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∂–µ NDN –∑–∞ Telegram Stars")
        else:
            print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—à–µ–ª—å–∫–∞")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞")

