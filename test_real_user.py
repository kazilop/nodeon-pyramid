#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import requests
import json

RAILWAY_URL = "https://nodeon-production.up.railway.app"

# –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram –∏–∑ –ª–æ–≥–æ–≤
real_init_data = "query_id=AAFn7WQMAAAAAGftZAym8xM1&user=%7B%22id%22%3A207940967%2C%22first_name%22%3A%22Fish%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22NobodyYety%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%253A%2F%2Ft.me%2Fi%2Fuserpic%2F320%2F6ZhmPb8VHMum-L3NuklXZIDjzwG5z3nmsPstk-j-X0Q.svg%22%7D&auth_date=1759589048&signature=IqcrTmc5udIux2TmYoFNRRGldsGj5cEgCzErhV9F9P8Em2Ep0QjsA6Er_CisvlqQhud44DH32KCjkadeiQ9EBQ&hash=f84de7979f9569a5d320a66bea2ae7682d39b2e9d7fadc1026a4f7c66c7c313f"

def test_user_profile():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("=" * 60)
    
    try:
        response = requests.get(
            f"{RAILWAY_URL}/api/user/profile",
            params={"init_data": real_init_data},
            timeout=10
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            user = data.get('user', {})
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:")
            print(f"   ID: {user.get('id')}")
            print(f"   Telegram ID: {user.get('telegram_id')}")
            print(f"   –ò–º—è: {user.get('first_name')} {user.get('last_name')}")
            print(f"   Username: @{user.get('username')}")
            print(f"   –ë–∞–ª–∞–Ω—Å: {user.get('balance_ndn')} NDN")
            print(f"   Pro —Å—Ç–∞—Ç—É—Å: {'–î–∞' if user.get('is_pro') else '–ù–µ—Ç'}")
            print(f"   –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {user.get('referral_link', '–ù–µ—Ç')}")
            
            return user
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return None

def test_buy_ndn(user_id):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ NDN"""
    print("\nüí∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ NDN")
    print("=" * 40)
    
    try:
        # –¢–µ—Å—Ç —Å query –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        print("–¢–µ—Å—Ç —Å query –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:")
        response = requests.post(
            f"{RAILWAY_URL}/api/ndn/buy",
            params={
                "init_data": real_init_data,
                "amount_ndn": 100
            },
            timeout=10
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ –£—Å–ø–µ—Ö: {data.get('message')}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
        
        # –¢–µ—Å—Ç —Å body –¥–∞–Ω–Ω—ã–º–∏
        print("\n–¢–µ—Å—Ç —Å body –¥–∞–Ω–Ω—ã–º–∏:")
        response = requests.post(
            f"{RAILWAY_URL}/api/ndn/buy",
            json={
                "init_data": real_init_data,
                "amount_ndn": 100
            },
            timeout=10
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ –£—Å–ø–µ—Ö: {data.get('message')}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

def test_buy_pro(user_id):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ Pro —Å—Ç–∞—Ç—É—Å–∞"""
    print("\nüëë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ Pro —Å—Ç–∞—Ç—É—Å–∞")
    print("=" * 45)
    
    try:
        response = requests.post(
            f"{RAILWAY_URL}/api/pro/buy",
            params={"init_data": real_init_data},
            timeout=10
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –£—Å–ø–µ—Ö: {data.get('message')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

def main():
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ Telegram")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = test_user_profile()
    
    if user:
        user_id = user.get('id')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É NDN
        test_buy_ndn(user_id)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É Pro (–µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ NDN)
        if user.get('balance_ndn', 0) >= 1000:
            test_buy_pro(user_id)
        else:
            print(f"\n‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ NDN –¥–ª—è –ø–æ–∫—É–ø–∫–∏ Pro —Å—Ç–∞—Ç—É—Å–∞ (–Ω—É–∂–Ω–æ 1000, –µ—Å—Ç—å {user.get('balance_ndn', 0)})")

if __name__ == "__main__":
    main()
