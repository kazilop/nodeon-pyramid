#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: —Ä–µ—Ñ–µ—Ä–∞–ª—ã, –ª–∏–¥–µ—Ä–±–æ—Ä–¥, –ø—Ä–∞–≤–∏–ª–∞
"""

import requests

def test_game_rules():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã"""
    url = "https://nodeon-production.up.railway.app/api/game-rules"
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã...")
    print(f"URL: {url}")
    
    try:
        response = requests.get(url, timeout=10)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")
            print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {data['rules']['title']}")
            print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–¥–µ–ª–æ–≤: {len(data['rules']['sections'])}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_leaderboard():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞"""
    url = "https://nodeon-production.up.railway.app/api/stats/leaderboard"
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞...")
    print(f"URL: {url}")
    
    try:
        response = requests.get(url, timeout=10)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –õ–∏–¥–µ—Ä–±–æ—Ä–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏–¥–µ—Ä–æ–≤: {len(data['leaders'])}")
            if data['leaders']:
                print(f"–¢–æ–ø –∏–≥—Ä–æ–∫: {data['leaders'][0]['first_name']} - {data['leaders'][0]['balance_ndn']} NDN")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_referrals():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    url = "https://nodeon-production.up.railway.app/api/referrals/1"
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤...")
    print(f"URL: {url}")
    
    try:
        response = requests.get(url, timeout=10)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")
            print(f"–ü—Ä—è–º—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {data['total_direct']}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π NodeOn Crypto")
    print("=" * 60)
    
    # –¢–µ—Å—Ç –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã
    rules_works = test_game_rules()
    
    # –¢–µ—Å—Ç –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
    leaderboard_works = test_leaderboard()
    
    # –¢–µ—Å—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    referrals_works = test_referrals()
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if rules_works else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    print(f"–õ–∏–¥–µ—Ä–±–æ—Ä–¥: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if leaderboard_works else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    print(f"–†–µ—Ñ–µ—Ä–∞–ª—ã: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if referrals_works else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    
    if rules_works and leaderboard_works and referrals_works:
        print("\nüéâ –í–°–ï –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–ê–Æ–¢!")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.")

if __name__ == "__main__":
    main()

