#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - failed to load user data
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
RAILWAY_URL = "https://nodeon-production.up.railway.app"
API_BASE = f"{RAILWAY_URL}/api"

def check_current_error():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –æ—à–∏–±–∫–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    print("-" * 50)
    
    # –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram –∏–∑ –ª–æ–≥–æ–≤
    real_telegram_data = "query_id%3DAAH6z9s5AgAAAPrP2zmCJWf0%26user%3D%257B%2522id%2522%253A5265674234%252C%2522first_name%2522%253A%2522%25D0%259C%25D0%25B0%25D0%25B9%25D1%258F%2522%252C%2522last_name%2522%253A%2522%2522%252C%2522username%2522%253A%2522mai_ryd%2522%252C%2522language_code%2522%253A%2522ru%2522%252C%2522allows_write_to_pm%2522%253Atrue%252C%2522photo_url%2522%253A%2522https%253A%255C%252F%255C%252Ft.me%255C%252Fi%255C%252Fuserpic%255C%252F320%255C%252FOXwbOMueYZ5veQLSz0ygjfcgU-4yhnHeMKOSuAhAi9gMZXI6XwIliSn9-WV0AREK.svg%2522%257D%26auth_date%3D1759609132%26signature%3D-Z9w-IkHM3au52cQwfPSfbP2_GHAZWxc9fhaqCQ0mFR8WwAnbqQNLKTQ2I3C3_5shPl_0Abr89sVUym0jjsmBw%26hash%3D130f4fea4aad862c2578c4ceae5ea05622ee78be051d5a29f969905c9647f8f0"
    
    try:
        response = requests.get(f"{API_BASE}/user/profile?init_data={real_telegram_data}")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            user = data.get('user', {})
            print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get('first_name')}")
            print(f"   –ë–∞–ª–∞–Ω—Å: {user.get('balance_ndn')} NDN")
            print(f"   Pro —Å—Ç–∞—Ç—É—Å: {user.get('is_pro')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            try:
                error_data = response.json()
                print(f"   –î–µ—Ç–∞–ª–∏: {error_data.get('detail', '–ù–µ—Ç –¥–µ—Ç–∞–ª–µ–π')}")
            except:
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_api_health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API"""
    print("\nüè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API")
    print("-" * 30)
    
    try:
        response = requests.get(f"{API_BASE}/test")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç: {data.get('message')}")
            return True
        else:
            print(f"‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def show_fix_instructions():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é"""
    print("\nüîß –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ")
    print("=" * 50)
    
    print("""
‚ùå –ü–†–û–ë–õ–ï–ú–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–æ–Ω–∫–∞ 'is_active' –≤ —Ç–∞–±–ª–∏—Ü–µ 'nodeon_users'

‚úÖ –†–ï–®–ï–ù–ò–ï: –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç –≤ Supabase

üìã –®–∞–≥–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:

1. üîß –û—Ç–∫—Ä–æ–π—Ç–µ Supabase:
   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://supabase.com/dashboard
   - –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–æ–µ–∫—Ç ahxwpzgltlzlvrtrbanm
   - –û—Ç–∫—Ä–æ–π—Ç–µ SQL Editor

2. üìù –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç:
   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ FIX_DATABASE_SCHEMA.sql
   - –í—Å—Ç–∞–≤—å—Ç–µ –≤ SQL Editor
   - –ù–∞–∂–º–∏—Ç–µ "Run" –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

3. ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python fix_auth_error.py
   - –î–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å: "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!"

üìä –ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∫—Ä–∏–ø—Ç:
   - –£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
   - –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫–æ–ª–æ–Ω–∫–∞–º–∏
   - –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω–¥–µ–∫—Å—ã
   - –°–æ–∑–¥–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è Stars –∏ –Æ–ö–∞—Å—Å—ã
   - –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
   - –°–æ–∑–¥–∞–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞

‚è±Ô∏è –í—Ä–µ–º—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ~2 –º–∏–Ω—É—Ç—ã
""")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–ö–ò –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    api_ok = check_api_health()
    
    if not api_ok:
        print("\n‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Railway.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –æ—à–∏–±–∫—É
    auth_ok = check_current_error()
    
    if auth_ok:
        print("\nüéâ –ü–†–û–ë–õ–ï–ú–ê –£–ñ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ")
    else:
        print("\n‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê –ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–ê")
        show_fix_instructions()
        
        print("\nüìù –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL —Å–∫—Ä–∏–ø—Ç–∞:")
        print("1. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 1-2 –º–∏–Ω—É—Ç—ã")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python fix_auth_error.py")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ Telegram Mini App")

if __name__ == "__main__":
    main()
