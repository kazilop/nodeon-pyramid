#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è connection string Supabase
"""

import requests
import json
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def get_supabase_connection():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ connection string –∏–∑ Supabase"""
    
    supabase_url = os.getenv("SUPABASE_URL")
    supabase_key = os.getenv("SUPABASE_ANON_KEY")
    
    if not supabase_url or not supabase_key:
        print("‚ùå SUPABASE_URL –∏–ª–∏ SUPABASE_ANON_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ")
        return None
    
    print(f"üîó Supabase URL: {supabase_url}")
    print(f"üîë API Key: {supabase_key[:20]}...")
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
    try:
        headers = {
            "apikey": supabase_key,
            "Authorization": f"Bearer {supabase_key}"
        }
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
        response = requests.get(f"{supabase_url}/rest/v1/", headers=headers)
        
        if response.status_code == 200:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ!")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º connection string
            # –ò–∑–≤–ª–µ–∫–∞–µ–º host –∏–∑ URL
            host = supabase_url.replace("https://", "").replace("http://", "")
            
            # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π connection string –¥–ª—è Supabase
            connection_string = f"postgresql://postgres.nodeon:G-Gje9!Jr4B9-$C@{host}:5432/postgres"
            
            print(f"üìä Connection string:")
            print(f"   {connection_string}")
            print()
            print("‚úÖ Connection string –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
            print("   –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤ .env —Ñ–∞–π–ª")
            
            return connection_string
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Supabase: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ connection string –¥–ª—è Supabase...")
    print()
    
    connection_string = get_supabase_connection()
    
    if connection_string:
        print("‚úÖ –ì–æ—Ç–æ–≤–æ! –°–∫–æ–ø–∏—Ä—É–π—Ç–µ connection string –≤ .env —Ñ–∞–π–ª")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å connection string")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SUPABASE_URL –∏ SUPABASE_ANON_KEY –≤ .env —Ñ–∞–π–ª–µ")

if __name__ == "__main__":
    main()
