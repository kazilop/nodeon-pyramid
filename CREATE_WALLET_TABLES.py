#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ —á–µ—Ä–µ–∑ Supabase REST API
"""

import requests
import json
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase
SUPABASE_URL = "https://ahxwpzgltlzlvrtrbanm.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFoeHdwemdsdGx6bHZydHJiYW5tIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk1MDMxNDksImV4cCI6MjA3NTA3OTE0OX0.h4sMVhVwvRUiHgbevDgv9W1G2S__uDWPUSCiXdrEy4E"

def get_supabase_headers():
    return {
        "apikey": SUPABASE_ANON_KEY,
        "Authorization": f"Bearer {SUPABASE_ANON_KEY}",
        "Content-Type": "application/json"
    }

def create_server_wallet_table():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞"""
    print("üè¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∫–æ—à–µ–ª—å–∫–∞
    wallet_data = {
        "wallet_name": "NodeOn Server Wallet",
        "balance_ndn": 1000000000.00,
        "total_sold_ndn": 0.00,
        "total_earned_stars": 0.00
    }
    
    try:
        response = requests.post(
            f"{SUPABASE_URL}/rest/v1/nodeon_server_wallet",
            headers=get_supabase_headers(),
            json=wallet_data
        )
        
        if response.status_code == 201:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: {response.status_code} - {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def create_sales_table():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ–¥–∞–∂"""
    print("üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ–¥–∞–∂...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –ø—Ä–æ–¥–∞–∂–∏
    sales_data = {
        "user_id": 1,
        "amount_ndn": 0.00,
        "amount_stars": 0.00,
        "telegram_payment_charge_id": "test_initialization",
        "status": "test"
    }
    
    try:
        response = requests.post(
            f"{SUPABASE_URL}/rest/v1/nodeon_sales",
            headers=get_supabase_headers(),
            json=sales_data
        )
        
        if response.status_code == 201:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–¥–∞–∂ —Å–æ–∑–¥–∞–Ω–∞!")
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
            requests.delete(
                f"{SUPABASE_URL}/rest/v1/nodeon_sales?telegram_payment_charge_id=eq.test_initialization",
                headers=get_supabase_headers()
            )
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ–¥–∞–∂: {response.status_code} - {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_wallet_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–æ—à–µ–ª—å–∫–∞"""
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ—à–µ–ª—å–∫–∞...")
    
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/nodeon_server_wallet",
            headers=get_supabase_headers()
        )
        
        if response.status_code == 200:
            wallets = response.json()
            if wallets:
                wallet = wallets[0]
                print(f"üí∞ –ë–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞: {wallet['balance_ndn']:,.2f} NDN")
                print(f"üìà –í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–Ω–æ: {wallet['total_sold_ndn']:,.2f} NDN")
                print(f"‚≠ê –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ Stars: {wallet['total_earned_stars']:,.2f}")
                return True
            else:
                print("‚ùå –ö–æ—à–µ–ª–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def test_sell_ndn():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–¥–∞–∂—É NDN"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏ NDN...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø—Ä–æ–¥–∞–∂—É
    test_sale = {
        "user_id": 1,
        "amount_ndn": 100.00,
        "amount_stars": 100.00,
        "telegram_payment_charge_id": "test_sale_123",
        "status": "completed"
    }
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –ø—Ä–æ–¥–∞–∂–∏
        response = requests.post(
            f"{SUPABASE_URL}/rest/v1/nodeon_sales",
            headers=get_supabase_headers(),
            json=test_sale
        )
        
        if response.status_code == 201:
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–æ–¥–∞–∂–∞ —Å–æ–∑–¥–∞–Ω–∞")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞
            wallet_update = {
                "balance_ndn": 999999900.00,
                "total_sold_ndn": 100.00,
                "total_earned_stars": 100.00
            }
            
            update_response = requests.patch(
                f"{SUPABASE_URL}/rest/v1/nodeon_server_wallet?id=eq.1",
                headers=get_supabase_headers(),
                json=wallet_update
            )
            
            if update_response.status_code == 200:
                print("‚úÖ –ë–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω")
                
                # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
                requests.delete(
                    f"{SUPABASE_URL}/rest/v1/nodeon_sales?telegram_payment_charge_id=eq.test_sale_123",
                    headers=get_supabase_headers()
                )
                
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–ª–∞–Ω—Å
                wallet_reset = {
                    "balance_ndn": 1000000000.00,
                    "total_sold_ndn": 0.00,
                    "total_earned_stars": 0.00
                }
                
                requests.patch(
                    f"{SUPABASE_URL}/rest/v1/nodeon_server_wallet?id=eq.1",
                    headers=get_supabase_headers(),
                    json=wallet_reset
                )
                
                print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞: {update_response.status_code}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –ø—Ä–æ–¥–∞–∂–∏: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ NodeOn Server Wallet Setup (REST API)")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    if create_server_wallet_table():
        if create_sales_table():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            if check_wallet_status():
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
                test_sell_ndn()
                
                print("\n‚úÖ –°–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
                print("üí∞ –í –∫–æ—à–µ–ª—å–∫–µ: 1,000,000,000 NDN")
                print("üîÑ –ì–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∂–µ NDN –∑–∞ Telegram Stars")
            else:
                print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—à–µ–ª—å–∫–∞")
        else:
            print("\n‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ–¥–∞–∂")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞")

