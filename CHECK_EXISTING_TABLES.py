#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü –≤ Supabase
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase
SUPABASE_URL = "https://ahxwpzgltlzlvrtrbanm.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFoeHdwemdsdGx6bHZydHJiYW5tIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk1MDMxNDksImV4cCI6MjA3NTA3OTE0OX0.h4sMVhVwvRUiHgbevDgv9W1G2S__uDWPUSCiXdrEy4E"

def get_supabase_headers():
    return {
        "apikey": SUPABASE_ANON_KEY,
        "Authorization": f"Bearer {SUPABASE_ANON_KEY}",
        "Content-Type": "application/json"
    }

def check_tables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã"""
    tables_to_check = [
        "nodeon_users",
        "nodeon_transactions", 
        "nodeon_referral_stats",
        "nodeon_server_wallet",
        "nodeon_sales"
    ]
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü...")
    print("=" * 50)
    
    for table in tables_to_check:
        try:
            response = requests.get(
                f"{SUPABASE_URL}/rest/v1/{table}?select=*&limit=1",
                headers=get_supabase_headers()
            )
            
            if response.status_code == 200:
                print(f"‚úÖ {table} - —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            elif response.status_code == 404:
                print(f"‚ùå {table} - –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                print(f"‚ö†Ô∏è {table} - –æ—à–∏–±–∫–∞ {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå {table} - –æ—à–∏–±–∫–∞: {e}")

def check_users_table_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("\nüë• –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    print("-" * 40)
    
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/nodeon_users?select=*&limit=1",
            headers=get_supabase_headers()
        )
        
        if response.status_code == 200:
            users = response.json()
            if users:
                user = users[0]
                print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è:")
                for key, value in user.items():
                    print(f"  - {key}: {type(value).__name__}")
            else:
                print("–¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_tables()
    check_users_table_structure()


