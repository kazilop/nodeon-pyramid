#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ Telegram Stars
"""

import requests
import json
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
RAILWAY_URL = "https://nodeon-production.up.railway.app"
API_BASE = f"{RAILWAY_URL}/api"

def test_stars_config():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Stars"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Stars")
    print("=" * 50)
    
    try:
        response = requests.get(f"{API_BASE}/stars/config")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Stars –ø–æ–ª—É—á–µ–Ω–∞:")
            for key, value in data['config'].items():
                print(f"   {key}: {value}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_stars_purchase():
    """–¢–µ—Å—Ç –ø–æ–∫—É–ø–∫–∏ NDN –∑–∞ Stars"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ NDN –∑–∞ Stars")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_data = {
            "stars_amount": 100,
            "payment_id": f"test_stars_{int(time.time())}"
        }
        
        response = requests.post(
            f"{API_BASE}/stars/buy-ndn?init_data=test_data",
            headers={'Content-Type': 'application/json'},
            json=test_data
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ü–æ–∫—É–ø–∫–∞ NDN –∑–∞ Stars —É—Å–ø–µ—à–Ω–∞:")
            print(f"   Stars: {data.get('stars_amount')}")
            print(f"   NDN: {data.get('ndn_amount')}")
            print(f"   –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å NDN: {data.get('new_ndn_balance')}")
            print(f"   –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å Stars: {data.get('new_stars_balance')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_stars_withdraw():
    """–¢–µ—Å—Ç –≤—ã–≤–æ–¥–∞ NDN –≤ Stars"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–≤–æ–¥–∞ NDN –≤ Stars")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_data = {
            "ndn_amount": 50
        }
        
        response = requests.post(
            f"{API_BASE}/stars/withdraw?init_data=test_data",
            headers={'Content-Type': 'application/json'},
            json=test_data
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –í—ã–≤–æ–¥ NDN –≤ Stars —É—Å–ø–µ—à–µ–Ω:")
            print(f"   NDN: {data.get('ndn_amount')}")
            print(f"   Stars: {data.get('stars_amount')}")
            print(f"   –ö–æ–º–∏—Å—Å–∏—è: {data.get('withdrawal_fee')}")
            print(f"   –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å NDN: {data.get('new_ndn_balance')}")
            print(f"   –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å Stars: {data.get('new_stars_balance')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_referral_stats():
    """–¢–µ—Å—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    print("=" * 50)
    
    try:
        response = requests.get(f"{API_BASE}/stats/referrals?init_data=test_data")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:")
            print(f"   –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {data.get('total_referrals')}")
            
            referrals_by_level = data.get('referrals_by_level', {})
            for level, referrals in referrals_by_level.items():
                print(f"   –£—Ä–æ–≤–µ–Ω—å {level}: {len(referrals)} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_user_profile():
    """–¢–µ—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("=" * 50)
    
    try:
        response = requests.get(f"{API_BASE}/user/profile?init_data=test_data")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω:")
            print(f"   –ò–º—è: {data.get('first_name')}")
            print(f"   –ë–∞–ª–∞–Ω—Å NDN: {data.get('balance_ndn')}")
            print(f"   Pro —Å—Ç–∞—Ç—É—Å: {data.get('is_pro')}")
            print(f"   –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {data.get('referral_link', '–ù–µ—Ç')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ Telegram Stars")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏
    test_stars_config()
    test_user_profile()
    test_stars_purchase()
    test_stars_withdraw()
    test_referral_stats()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìù –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç—ã –≤ Supabase")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram")
    print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–æ–∫—É–ø–∫—É –∏ –≤—ã–≤–æ–¥ Stars")

if __name__ == "__main__":
    main()
