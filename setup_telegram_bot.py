#!/usr/bin/env python3
"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞ –¥–ª—è NodeOn Pyramid
"""

import requests
import json
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_BOT_TOKEN = "7670372637:AAG7XWbNkhvNx_M4MI4118AYXvIsn3bRMDQ"
RAILWAY_WEBHOOK_URL = "https://nodeon-production.up.railway.app/webhook"

def setup_bot_commands():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/setMyCommands"
    
    commands = [
        {
            "command": "start",
            "description": "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å NodeOn Pyramid"
        },
        {
            "command": "help",
            "description": "‚ùì –ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
        },
        {
            "command": "balance",
            "description": "üí∞ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å NDN"
        },
        {
            "command": "referrals",
            "description": "üë• –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã"
        },
        {
            "command": "leaderboard",
            "description": "üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤"
        },
        {
            "command": "buy_pro",
            "description": "‚≠ê –ö—É–ø–∏—Ç—å Pro —Å—Ç–∞—Ç—É—Å"
        },
        {
            "command": "buy_ndn",
            "description": "üíé –ö—É–ø–∏—Ç—å NDN –∑–∞ Stars"
        },
        {
            "command": "withdraw",
            "description": "üí∏ –í—ã–≤–µ—Å—Ç–∏ NDN –≤ Stars"
        },
        {
            "command": "terms",
            "description": "üìã –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"
        },
        {
            "command": "support",
            "description": "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞"
        },
        {
            "command": "paysupport",
            "description": "üí≥ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π"
        }
    ]
    
    data = {"commands": commands}
    
    try:
        response = requests.post(url, json=data)
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
                for cmd in commands:
                    print(f"   /{cmd['command']} - {cmd['description']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∞–Ω–¥: {result}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def setup_webhook():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/setWebhook"
    
    data = {
        "url": RAILWAY_WEBHOOK_URL,
        "allowed_updates": ["message", "callback_query", "pre_checkout_query"]
    }
    
    try:
        response = requests.post(url, json=data)
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print(f"‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                print(f"   URL: {RAILWAY_WEBHOOK_URL}")
                print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {result.get('description', 'OK')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook: {result}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def get_webhook_info():
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/getWebhookInfo"
    
    try:
        response = requests.get(url)
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                webhook_info = result.get('result', {})
                print("üì° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:")
                print(f"   URL: {webhook_info.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
                print(f"   –°—Ç–∞—Ç—É—Å: {'‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' if webhook_info.get('url') else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
                print(f"   –û—à–∏–±–∫–∏: {webhook_info.get('last_error_message', '–ù–µ—Ç')}")
                print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {webhook_info.get('last_error_date', '–ù–µ—Ç')}")
                return webhook_info
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {result}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return None

def get_bot_info():
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/getMe"
    
    try:
        response = requests.get(url)
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                bot_info = result.get('result', {})
                print("ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:")
                print(f"   –ò–º—è: {bot_info.get('first_name')}")
                print(f"   Username: @{bot_info.get('username')}")
                print(f"   ID: {bot_info.get('id')}")
                print(f"   –ú–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–∞–º: {bot_info.get('can_join_groups', False)}")
                print(f"   –ú–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: {bot_info.get('can_read_all_group_messages', False)}")
                print(f"   –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç inline: {bot_info.get('supports_inline_queries', False)}")
                return bot_info
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {result}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞ –¥–ª—è NodeOn Pyramid")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    print("\n1. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:")
    bot_info = get_bot_info()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    print("\n2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥:")
    setup_bot_commands()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook
    print("\n3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook:")
    setup_webhook()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook:")
    webhook_info = get_webhook_info()
    
    print("\n" + "=" * 50)
    print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    
    if webhook_info and webhook_info.get('url'):
        print("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å webhook")
        print(f"üîó Mini App URL: https://t.me/{bot_info.get('username')}")
    else:
        print("‚ùå Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")

if __name__ == "__main__":
    main()
