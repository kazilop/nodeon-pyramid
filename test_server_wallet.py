#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ NodeOn Pyramid
"""

import requests
import json
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
RAILWAY_URL = "https://nodeon-production.up.railway.app"
API_BASE = f"{RAILWAY_URL}/api"

def test_api_health():
    """–¢–µ—Å—Ç –∑–¥–æ—Ä–æ–≤—å—è API"""
    print("üè• –¢–µ—Å—Ç –∑–¥–æ—Ä–æ–≤—å—è API")
    print("-" * 30)
    
    try:
        response = requests.get(f"{API_BASE}/test", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç: {data.get('message')}")
            return True
        else:
            print(f"‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_server_wallet_balance():
    """–¢–µ—Å—Ç –±–∞–ª–∞–Ω—Å–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞"""
    print("\nüè¶ –¢–µ—Å—Ç –±–∞–ª–∞–Ω—Å–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞")
    print("-" * 50)
    
    try:
        response = requests.get(f"{API_BASE}/wallet/balance", timeout=10)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                wallet = data.get('wallet', {})
                print("‚úÖ –ë–∞–ª–∞–Ω—Å —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
                print(f"   ID –∫–æ—à–µ–ª—å–∫–∞: {wallet.get('id')}")
                print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {wallet.get('wallet_name')}")
                print(f"   –†–µ–∑–µ—Ä–≤ NDN: {wallet.get('balance_ndn')} NDN")
                print(f"   –í—ã–¥–∞–Ω–æ NDN: {wallet.get('total_ndn_issued')} NDN")
                print(f"   –ü–æ–ª—É—á–µ–Ω–æ NDN: {wallet.get('total_ndn_received')} NDN")
                print(f"   –î–æ—Å—Ç—É–ø–Ω–æ NDN: {wallet.get('available_ndn')} NDN")
                return wallet
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ—à–µ–ª—å–∫–∞: {data.get('error')}")
                return None
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def test_buy_ndn_with_stars():
    """–¢–µ—Å—Ç –ø–æ–∫—É–ø–∫–∏ NDN –∑–∞ Stars —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ—à–µ–ª–µ–∫"""
    print("\nüí∞ –¢–µ—Å—Ç –ø–æ–∫—É–ø–∫–∏ NDN –∑–∞ Stars")
    print("-" * 50)
    
    real_telegram_data = "query_id%3DAAH6z9s5AgAAAPrP2zmCJWf0%26user%3D%257B%2522id%2522%253A5265674234%252C%2522first_name%2522%253A%2522%25D0%259C%25D0%25B0%25D0%25B9%25D1%258F%2522%252C%2522last_name%2522%253A%2522%2522%252C%2522username%2522%253A%2522mai_ryd%2522%252C%2522language_code%2522%253A%2522ru%2522%252C%2522allows_write_to_pm%2522%253Atrue%252C%2522photo_url%2522%253A%2522https%253A%255C%252F%255C%252Ft.me%255C%252Fi%255C%252Fuserpic%255C%252F320%255C%252FOXwbOMueYZ5veQLSz0ygjfcgU-4yhnHeMKOSuAhAi9gMZXI6XwIliSn9-WV0AREK.svg%2522%257D%26auth_date%3D1759609132%26signature%3D-Z9w-IkHM3au52cQwfPSfbP2_GHAZWxc9fhaqCQ0mFR8WwAnbqQNLKTQ2I3C3_5shPl_0Abr89sVUym0jjsmBw%26hash%3D130f4fea4aad862c2578c4ceae5ea05622ee78be051d5a29f969905c9647f8f0"
    
    try:
        response = requests.post(f"{API_BASE}/stars/buy-ndn", 
            json={
                "init_data": real_telegram_data,
                "stars_amount": 50.0
            },
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                print("‚úÖ –ü–æ–∫—É–ø–∫–∞ NDN –∑–∞ Stars —Ä–∞–±–æ—Ç–∞–µ—Ç:")
                print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message')}")
                print(f"   –°—É–º–º–∞ Stars: {data.get('stars_amount')}")
                print(f"   –°—É–º–º–∞ NDN: {data.get('ndn_amount')}")
                print(f"   –ë–∞–ª–∞–Ω—Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–æ: {data.get('server_balance_before')} NDN")
                print(f"   –ë–∞–ª–∞–Ω—Å —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ: {data.get('server_balance_after')} NDN")
                print(f"   –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {data.get('user_balance')} NDN")
                print(f"   ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {data.get('transaction_id')}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏: {data.get('message')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            try:
                error_data = response.json()
                print(f"   –î–µ—Ç–∞–ª–∏: {error_data.get('detail', '–ù–µ—Ç –¥–µ—Ç–∞–ª–µ–π')}")
            except:
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_sell_ndn_for_stars():
    """–¢–µ—Å—Ç –ø—Ä–æ–¥–∞–∂–∏ NDN –∑–∞ Stars —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ—à–µ–ª–µ–∫"""
    print("\n‚≠ê –¢–µ—Å—Ç –ø—Ä–æ–¥–∞–∂–∏ NDN –∑–∞ Stars")
    print("-" * 50)
    
    real_telegram_data = "query_id%3DAAH6z9s5AgAAAPrP2zmCJWf0%26user%3D%257B%2522id%2522%253A5265674234%252C%2522first_name%2522%253A%2522%25D0%259C%25D0%25B0%25D0%25B9%25D1%258F%2522%252C%2522last_name%2522%253A%2522%2522%252C%2522username%2522%253A%2522mai_ryd%2522%252C%2522language_code%2522%253A%2522ru%2522%252C%2522allows_write_to_pm%2522%253Atrue%252C%2522photo_url%2522%253A%2522https%253A%255C%252F%255C%252Ft.me%255C%252Fi%255C%252Fuserpic%255C%252F320%255C%252FOXwbOMueYZ5veQLSz0ygjfcgU-4yhnHeMKOSuAhAi9gMZXI6XwIliSn9-WV0AREK.svg%2522%257D%26auth_date%3D1759609132%26signature%3D-Z9w-IkHM3au52cQwfPSfbP2_GHAZWxc9fhaqCQ0mFR8WwAnbqQNLKTQ2I3C3_5shPl_0Abr89sVUym0jjsmBw%26hash%3D130f4fea4aad862c2578c4ceae5ea05622ee78be051d5a29f969905c9647f8f0"
    
    try:
        response = requests.post(f"{API_BASE}/stars/sell-ndn", 
            json={
                "init_data": real_telegram_data,
                "ndn_amount": 25.0
            },
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                print("‚úÖ –ü—Ä–æ–¥–∞–∂–∞ NDN –∑–∞ Stars —Ä–∞–±–æ—Ç–∞–µ—Ç:")
                print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message')}")
                print(f"   –°—É–º–º–∞ NDN: {data.get('ndn_amount')}")
                print(f"   –°—É–º–º–∞ Stars: {data.get('stars_amount')}")
                print(f"   –ö–æ–º–∏—Å—Å–∏—è: {data.get('withdrawal_fee')} NDN")
                print(f"   –ë–∞–ª–∞–Ω—Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–æ: {data.get('server_balance_before')} NDN")
                print(f"   –ë–∞–ª–∞–Ω—Å —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ: {data.get('server_balance_after')} NDN")
                print(f"   –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {data.get('user_balance')} NDN")
                print(f"   ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {data.get('transaction_id')}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–¥–∞–∂–∏: {data.get('message')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            try:
                error_data = response.json()
                print(f"   –î–µ—Ç–∞–ª–∏: {error_data.get('detail', '–ù–µ—Ç –¥–µ—Ç–∞–ª–µ–π')}")
            except:
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_wallet_transactions():
    """–¢–µ—Å—Ç –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∫–æ—à–µ–ª—å–∫–∞"""
    print("\nüìä –¢–µ—Å—Ç –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∫–æ—à–µ–ª—å–∫–∞")
    print("-" * 50)
    
    try:
        response = requests.get(f"{API_BASE}/wallet/transactions?limit=10", timeout=10)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                transactions = data.get('transactions', [])
                print(f"‚úÖ –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç:")
                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {len(transactions)}")
                if transactions:
                    latest = transactions[0]
                    print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:")
                    print(f"     –¢–∏–ø: {latest.get('type')}")
                    print(f"     –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {latest.get('user_name')}")
                    print(f"     Stars: {latest.get('stars_amount')}")
                    print(f"     NDN: {latest.get('ndn_amount')}")
                    print(f"     –ë–∞–ª–∞–Ω—Å –¥–æ: {latest.get('balance_before')}")
                    print(f"     –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ: {latest.get('balance_after')}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {data.get('error')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_insufficient_funds():
    """–¢–µ—Å—Ç –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –≤ –∫–æ—à–µ–ª—å–∫–µ"""
    print("\nüö´ –¢–µ—Å—Ç –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤")
    print("-" * 50)
    
    real_telegram_data = "query_id%3DAAH6z9s5AgAAAPrP2zmCJWf0%26user%3D%257B%2522id%2522%253A5265674234%252C%2522first_name%2522%253A%2522%25D0%259C%25D0%25B0%25D0%25B9%25D1%258F%2522%252C%2522last_name%2522%253A%2522%2522%252C%2522username%2522%253A%2522mai_ryd%2522%252C%2522language_code%2522%253A%2522ru%2522%252C%2522allows_write_to_pm%2522%253Atrue%252C%2522photo_url%2522%253A%2522https%253A%255C%252F%255C%252Ft.me%255C%252Fi%255C%252Fuserpic%255C%252F320%255C%252FOXwbOMueYZ5veQLSz0ygjfcgU-4yhnHeMKOSuAhAi9gMZXI6XwIliSn9-WV0AREK.svg%2522%257D%26auth_date%3D1759609132%26signature%3D-Z9w-IkHM3au52cQwfPSfbP2_GHAZWxc9fhaqCQ0mFR8WwAnbqQNLKTQ2I3C3_5shPl_0Abr89sVUym0jjsmBw%26hash%3D130f4fea4aad862c2578c4ceae5ea05622ee78be051d5a29f969905c9647f8f0"
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∫—É–ø–∏—Ç—å –æ—á–µ–Ω—å –º–Ω–æ–≥–æ NDN
        response = requests.post(f"{API_BASE}/stars/buy-ndn", 
            json={
                "init_data": real_telegram_data,
                "stars_amount": 1000000.0  # –û—á–µ–Ω—å –±–æ–ª—å—à–∞—è —Å—É–º–º–∞
            },
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            if not data.get('success'):
                print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–∫—É–ø–∫–∞ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤:")
                print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message')}")
                return True
            else:
                print("‚ùå –ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞, —Ö–æ—Ç—è –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ï–†–í–ï–†–ù–û–ì–û –ö–û–®–ï–õ–¨–ö–ê")
    print("=" * 60)
    
    results = []
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    results.append(("API Health", test_api_health()))
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ—à–µ–ª–µ–∫
    wallet = test_server_wallet_balance()
    results.append(("Server Wallet Balance", wallet is not None))
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É NDN
    results.append(("Buy NDN with Stars", test_buy_ndn_with_stars()))
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∂—É NDN
    results.append(("Sell NDN for Stars", test_sell_ndn_for_stars()))
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    results.append(("Wallet Transactions", test_wallet_transactions()))
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞
    results.append(("Insufficient Funds Check", test_insufficient_funds()))
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    total_tests = len(results)
    passed_tests = sum(1 for _, status in results if status)
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –°–ï–†–í–ï–†–ù–û–ì–û –ö–û–®–ï–õ–¨–ö–ê")
    print("=" * 60)
    
    for name, status in results:
        status_icon = "‚úÖ" if status else "‚ùå"
        print(f"{status_icon} {name}")
    
    print(f"\nüìà –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {passed_tests}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed_tests == total_tests:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –°–ï–†–í–ï–†–ù–û–ì–û –ö–û–®–ï–õ–¨–ö–ê –ü–†–û–ô–î–ï–ù–´!")
        print("‚úÖ –°–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ NDN –ø–æ–∫—É–ø–∞—é—Ç—Å—è –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–∞")
        print("‚úÖ NDN –ø—Ä–æ–¥–∞—é—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ä–µ–∑–µ—Ä–≤")
        print("‚úÖ –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è")
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print(f"\n‚ö†Ô∏è {total_tests - passed_tests} —Ç–µ—Å—Ç–æ–≤ –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ API")
    
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç CREATE_SERVER_WALLET.sql –≤ Supabase")
    print("2. –ó–∞–º–µ–Ω–∏—Ç–µ main.py –Ω–∞ main_with_server_wallet.py")
    print("3. –ó–∞–º–µ–Ω–∏—Ç–µ index.html –Ω–∞ index_with_server_wallet.html")
    print("4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Railway")
    print("5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ Telegram Mini App")

if __name__ == "__main__":
    main()
