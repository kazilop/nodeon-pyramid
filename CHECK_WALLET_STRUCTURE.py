#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase
SUPABASE_URL = "https://ahxwpzgltlzlvrtrbanm.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFoeHdwemdsdGx6bHZydHJiYW5tIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk1MDMxNDksImV4cCI6MjA3NTA3OTE0OX0.h4sMVhVwvRUiHgbevDgv9W1G2S__uDWPUSCiXdrEy4E"

def get_supabase_headers():
    return {
        "apikey": SUPABASE_ANON_KEY,
        "Authorization": f"Bearer {SUPABASE_ANON_KEY}",
        "Content-Type": "application/json"
    }

def check_wallet_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã –∫–æ—à–µ–ª—å–∫–∞"""
    print("üè¶ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞:")
    print("-" * 50)
    
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/nodeon_server_wallet?select=*&limit=1",
            headers=get_supabase_headers()
        )
        
        if response.status_code == 200:
            wallets = response.json()
            if wallets:
                wallet = wallets[0]
                print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è:")
                for key, value in wallet.items():
                    print(f"  - {key}: {type(value).__name__} = {value}")
            else:
                print("–¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

def create_wallet_entry():
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–ø–∏—Å—å –∫–æ—à–µ–ª—å–∫–∞"""
    print("\nüí∞ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∫–æ—à–µ–ª—å–∫–∞...")
    
    wallet_data = {
        "wallet_name": "NodeOn Server Wallet",
        "balance_ndn": 1000000000.00,
        "total_sold_ndn": 0.00,
        "total_earned_stars": 0.00
    }
    
    try:
        response = requests.post(
            f"{SUPABASE_URL}/rest/v1/nodeon_server_wallet",
            headers=get_supabase_headers(),
            json=wallet_data
        )
        
        if response.status_code == 201:
            print("‚úÖ –ó–∞–ø–∏—Å—å –∫–æ—à–µ–ª—å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {response.status_code} - {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def create_sales_table():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ–¥–∞–∂ —á–µ—Ä–µ–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"""
    print("\nüìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ–¥–∞–∂...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ç–∞–±–ª–∏—Ü—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è –ø—Ä–æ–¥–∞–∂
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ telegram_payment_charge_id –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø—Ä–æ–¥–∞–∂–∏
    sale_transaction = {
        "user_id": 1,
        "type": "server_sale",
        "amount_ndn": 0.00,
        "amount_stars": 0.00,
        "description": "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ–¥–∞–∂",
        "telegram_payment_charge_id": "init_sales_table"
    }
    
    try:
        response = requests.post(
            f"{SUPABASE_URL}/rest/v1/nodeon_transactions",
            headers=get_supabase_headers(),
            json=sale_transaction
        )
        
        if response.status_code == 201:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–¥–∞–∂ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
            requests.delete(
                f"{SUPABASE_URL}/rest/v1/nodeon_transactions?telegram_payment_charge_id=eq.init_sales_table",
                headers=get_supabase_headers()
            )
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {response.status_code} - {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    check_wallet_structure()
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∫–æ—à–µ–ª—å–∫–∞ –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞
    response = requests.get(
        f"{SUPABASE_URL}/rest/v1/nodeon_server_wallet?select=count",
        headers=get_supabase_headers()
    )
    
    if response.status_code == 200:
        count = response.json()
        if count == 0:
            create_wallet_entry()
        else:
            print(f"\n‚úÖ –í –∫–æ—à–µ–ª—å–∫–µ —É–∂–µ –µ—Å—Ç—å {count} –∑–∞–ø–∏—Å–µ–π")
    
    create_sales_table()


