#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ Railway URL –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
"""

import requests
import json
import time

def check_railway_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Railway —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º URL"""
    correct_url = "https://nodeon-production.up.railway.app"
    
    try:
        print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Railway: {correct_url}")
        response = requests.get(correct_url, timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            print("   –û—Ç–≤–µ—Ç:", response.text)
            return True
        else:
            print("   –û—à–∏–±–∫–∞:", response.text)
            return False
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def check_api_endpoints():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints"""
    base_url = "https://nodeon-production.up.railway.app"
    
    endpoints = [
        "/",
        "/test",
        "/api/test",
        "/health"
    ]
    
    for endpoint in endpoints:
        try:
            print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º {endpoint}...")
            response = requests.get(f"{base_url}{endpoint}", timeout=10)
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code == 200:
                print(f"   –û—Ç–≤–µ—Ç: {response.text[:100]}...")
            else:
                print(f"   –û—à–∏–±–∫–∞: {response.text[:100]}...")
        except Exception as e:
            print(f"   –û—à–∏–±–∫–∞: {e}")

def create_developer_via_api():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ —á–µ—Ä–µ–∑ API"""
    try:
        print("\nüë§ –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞...")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        response = requests.get(
            "https://nodeon-production.up.railway.app/api/user/profile",
            params={"init_data": "test_data"},
            timeout=30
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω/–Ω–∞–π–¥–µ–Ω")
            print(f"   ID: {data['user']['id']}")
            print(f"   –ò–º—è: {data['user']['first_name']} {data['user']['last_name']}")
            print(f"   –ë–∞–ª–∞–Ω—Å: {data['user']['balance_ndn']} NDN")
            print(f"   Pro: {'–î–∞' if data['user']['is_pro'] else '–ù–µ—Ç'}")
            return True
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_telegram_app():
    """–¢–µ—Å—Ç Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("\nüì± –¢–µ—Å—Ç–∏—Ä—É–µ–º Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
    print("   GitHub Pages: https://kazilop.github.io/nodeon-pyramid/")
    print("   Railway API: https://nodeon-production.up.railway.app/")
    print("\n   –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("   2. –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram")
    print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö")

def main():
    print("üöÄ NodeOn Pyramid - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ Railway")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Railway
    if check_railway_status():
        print("‚úÖ Railway —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    else:
        print("‚ùå Railway –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoints
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoints...")
    check_api_endpoints()
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if create_developer_via_api():
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ API")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ API")
        print("   –ù—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —á–µ—Ä–µ–∑ Supabase SQL")
    
    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Telegram
    test_telegram_app()
    
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ https://kazilop.github.io/nodeon-pyramid/")
    print("2. –û–±–Ω–æ–≤–∏—Ç–µ API URL –≤ –∫–æ–¥–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
    print("3. –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram")
    print("4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Pro —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ Supabase")

if __name__ == "__main__":
    main()
