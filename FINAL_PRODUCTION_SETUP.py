#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–∏—Å—Ç–µ–º—ã NodeOn Pyramid
"""

import requests
import json
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
RAILWAY_URL = "https://nodeon-production.up.railway.app"
API_BASE = f"{RAILWAY_URL}/api"
GITHUB_PAGES_URL = "https://kazilop.github.io/nodeon-pyramid/"

def print_header(title):
    """–ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫"""
    print("\n" + "=" * 60)
    print(f"üöÄ {title}")
    print("=" * 60)

def print_step(step, description):
    """–®–∞–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print(f"\nüìã –®–∞–≥ {step}: {description}")
    print("-" * 40)

def check_api_health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API"""
    print_step(1, "–ü—Ä–æ–≤–µ—Ä–∫–∞ API")
    
    try:
        response = requests.get(f"{API_BASE}/test", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç: {data.get('message')}")
            return True
        else:
            print(f"‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_frontend():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"""
    print_step(2, "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞")
    
    try:
        response = requests.get(GITHUB_PAGES_URL, timeout=10)
        if response.status_code == 200:
            content = response.text
            if "NodeOn Pyramid" in content:
                print("‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print(f"üåê URL: {GITHUB_PAGES_URL}")
                return True
            else:
                print("‚ö†Ô∏è –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ–ø–æ–ª–Ω—ã–π")
                return False
        else:
            print(f"‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_telegram_auth():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print_step(3, "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram")
    
    # –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram
    real_telegram_data = "query_id%3DAAFn7WQMAAAAAGftZAynMETx%26user%3D%257B%2522id%2522%253A207940967%252C%2522first_name%2522%253A%2522Fish%2522%252C%2522last_name%2522%253A%2522%2522%252C%2522username%2522%253A%2522NobodyYety%2522%252C%2522language_code%2522%253A%2522ru%2522%252C%2522is_premium%2522%253Atrue%252C%2522allows_write_to_pm%2522%253Atrue%252C%2522photo_url%2522%253A%2522https%253A%255C%252F%255C%252Ft.me%255C%252Fi%255C%252Fuserpic%255C%252F320%255C%252F6ZhmPb8VHMum-L3NuklXZIDjzwG5z3nmsPstk-j-X0Q.svg%2522%257D%26auth_date%3D1759595069%26signature%3DzaTxfsbclaZwvnfSR1fy86Yr9_TDYfYKlbdlIDCI0CZHOte_WZ8DHcUuIxv7RVqoiuiux-yZqP-ZMMNLSnefDQ%26hash%3D5bd316b59632460d35963101eac62a76f2538fb18b5958ad6f9114f0931e29f9"
    
    try:
        response = requests.get(f"{API_BASE}/user/profile?init_data={real_telegram_data}")
        if response.status_code == 200:
            data = response.json()
            user = data.get('user', {})
            print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç: {user.get('first_name')}")
            print(f"   –ë–∞–ª–∞–Ω—Å: {user.get('balance_ndn')} NDN")
            print(f"   Pro —Å—Ç–∞—Ç—É—Å: {user.get('is_pro')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_database_setup():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print_step(4, "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Stars –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        response = requests.get(f"{API_BASE}/stars/config")
        if response.status_code == 200:
            data = response.json()
            config = data.get('config', {})
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞:")
            print(f"   –ö—É—Ä—Å Stars: 1 Star = {config.get('stars_to_ndn_rate')} NDN")
            print(f"   –ú–∏–Ω–∏–º—É–º: {config.get('min_stars_purchase')} Stars")
            return True
        else:
            print(f"‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {response.status_code}")
            print("üìù –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç –≤ Supabase")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_referral_system():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print_step(5, "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã")
    
    real_telegram_data = "query_id%3DAAFn7WQMAAAAAGftZAynMETx%26user%3D%257B%2522id%2522%253A207940967%252C%2522first_name%2522%253A%2522Fish%2522%252C%2522last_name%2522%253A%2522%2522%252C%2522username%2522%253A%2522NobodyYety%2522%252C%2522language_code%2522%253A%2522ru%2522%252C%2522is_premium%2522%253Atrue%252C%2522allows_write_to_pm%2522%253Atrue%252C%2522photo_url%2522%253A%2522https%253A%255C%252F%255C%252Ft.me%255C%252Fi%255C%252Fuserpic%255C%252F320%255C%252F6ZhmPb8VHMum-L3NuklXZIDjzwG5z3nmsPstk-j-X0Q.svg%2522%257D%26auth_date%3D1759595069%26signature%3DzaTxfsbclaZwvnfSR1fy86Yr9_TDYfYKlbdlIDCI0CZHOte_WZ8DHcUuIxv7RVqoiuiux-yZqP-ZMMNLSnefDQ%26hash%3D5bd316b59632460d35963101eac62a76f2538fb18b5958ad6f9114f0931e29f9"
    
    try:
        response = requests.get(f"{API_BASE}/stats/referrals?init_data={real_telegram_data}")
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
            print(f"   –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {data.get('total_referrals')}")
            return True
        else:
            print(f"‚ö†Ô∏è –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def show_setup_instructions():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"""
    print_header("–ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï")
    
    print("""
üìã –î–ª—è –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

1. üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Supabase:
   - –û—Ç–∫—Ä–æ–π—Ç–µ https://supabase.com/dashboard
   - –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–æ–µ–∫—Ç ahxwpzgltlzlvrtrbanm
   - –û—Ç–∫—Ä–æ–π—Ç–µ SQL Editor
   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ SETUP_PRODUCTION_DATABASE.sql

2. ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞:
   - –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather
   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Mini App —Å URL: https://kazilop.github.io/nodeon-pyramid/
   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ webhook: python setup_webhook_production.py

3. üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Railway:
   - TELEGRAM_BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–±–æ—Ç–∞
   - TELEGRAM_BOT_USERNAME=–∏–º—è_–≤–∞—à–µ–≥–æ_–±–æ—Ç–∞
   - SECRET_KEY=–≤–∞—à_—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_–∫–ª—é—á
   - DEVELOPER_TELEGRAM_ID=207940967

4. üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python check_production_system.py
   - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ Telegram Mini App
""")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_header("–§–ò–ù–ê–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ü–†–û–î–ê–ö–®–ù –°–ò–°–¢–ï–ú–´")
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    api_ok = check_api_health()
    frontend_ok = check_frontend()
    auth_ok = check_telegram_auth()
    db_ok = check_database_setup()
    referral_ok = check_referral_system()
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    total_checks = 5
    passed_checks = sum([api_ok, frontend_ok, auth_ok, db_ok, referral_ok])
    
    print_header("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò")
    
    print(f"‚úÖ API: {'–†–∞–±–æ—Ç–∞–µ—Ç' if api_ok else '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    print(f"‚úÖ Frontend: {'–†–∞–±–æ—Ç–∞–µ—Ç' if frontend_ok else '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: {'–†–∞–±–æ—Ç–∞–µ—Ç' if auth_ok else '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {'–ù–∞—Å—Ç—Ä–æ–µ–Ω–∞' if db_ok else '–¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}")
    print(f"‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—ã: {'–†–∞–±–æ—Ç–∞—é—Ç' if referral_ok else '–¢—Ä–µ–±—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}")
    
    print(f"\nüìä –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {passed_checks}/{total_checks} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≥–æ—Ç–æ–≤—ã")
    
    if passed_checks == total_checks:
        print_header("üéâ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê!")
        print("""
‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç
‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
‚úÖ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–Ω

üåê URL —Å–∏—Å—Ç–µ–º—ã:
   Frontend: https://kazilop.github.io/nodeon-pyramid/
   API: https://nodeon-production.up.railway.app/api

üì± –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
   1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –±–æ—Ç–∞
   2. –ù–∞–∂–º–∏—Ç–µ "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏
""")
    else:
        print_header("‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ù–ê–°–¢–†–û–ô–ö–ê")
        show_setup_instructions()
        
        print(f"\nüîß –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å {total_checks - passed_checks} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤")
        print("üìù –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")

if __name__ == "__main__":
    main()
