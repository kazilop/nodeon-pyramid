#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–≥–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
RAILWAY_URL = "https://nodeon-production.up.railway.app"
API_BASE = f"{RAILWAY_URL}/api"

def test_without_auth():
    """–¢–µ—Å—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 401"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    print("=" * 50)
    
    try:
        response = requests.get(f"{API_BASE}/user/profile")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 401:
            data = response.json()
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('detail')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: –î–æ–ª–∂–µ–Ω –±—ã—Ç—å 401, –ø–æ–ª—É—á–µ–Ω {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_with_test_data():
    """–¢–µ—Å—Ç —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ - –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 401"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("=" * 50)
    
    try:
        response = requests.get(f"{API_BASE}/user/profile?init_data=test_data")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 401:
            data = response.json()
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('detail')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: –î–æ–ª–∂–µ–Ω –±—ã—Ç—å 401, –ø–æ–ª—É—á–µ–Ω {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_with_empty_auth():
    """–¢–µ—Å—Ç —Å –ø—É—Å—Ç–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π - –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 401"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø—É—Å—Ç–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
    print("=" * 50)
    
    try:
        response = requests.get(f"{API_BASE}/user/profile?init_data=")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 401:
            data = response.json()
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å –ø—É—Å—Ç–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π:")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('detail')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: –î–æ–ª–∂–µ–Ω –±—ã—Ç—å 401, –ø–æ–ª—É—á–µ–Ω {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_with_invalid_auth():
    """–¢–µ—Å—Ç —Å –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π - –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 401"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
    print("=" * 50)
    
    try:
        response = requests.get(f"{API_BASE}/user/profile?init_data=invalid_data")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 401:
            data = response.json()
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π:")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('detail')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: –î–æ–ª–∂–µ–Ω –±—ã—Ç—å 401, –ø–æ–ª—É—á–µ–Ω {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_api_health():
    """–¢–µ—Å—Ç –∑–¥–æ—Ä–æ–≤—å—è API - –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è API")
    print("=" * 50)
    
    try:
        response = requests.get(f"{API_BASE}/test")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç:")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å—Ç–∞—Ç—É—Å {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_stars_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Stars - –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Stars")
    print("=" * 50)
    
    try:
        response = requests.get(f"{API_BASE}/stars/config")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Stars –¥–æ—Å—Ç—É–ø–Ω–∞:")
            print(f"   –£—Å–ø–µ—Ö: {data.get('success')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Stars –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, —Å—Ç–∞—Ç—É—Å {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–≥–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
    test_api_health()
    test_stars_config()
    test_without_auth()
    test_with_test_data()
    test_with_empty_auth()
    test_with_invalid_auth()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìù –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print("   - API —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ Telegram")
    print("   - –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –æ–±—Ö–æ–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã")
    print("   - –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ Telegram Mini App")

if __name__ == "__main__":
    main()
