#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö NodeOn
–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è –¥–ª—è NDN –±–∞–ª–∞–Ω—Å–æ–≤ –∏ Telegram Stars
"""

import os
import sys
import asyncio
from sqlalchemy import create_engine, text
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = os.getenv('DATABASE_URL')
if not DATABASE_URL:
    print("‚ùå –û—à–∏–±–∫–∞: DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
    sys.exit(1)

engine = create_engine(DATABASE_URL)

async def update_database():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω –≤–µ—Ä—Å–∏–∏"""
    
    print("üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö NodeOn...")
    
    try:
        with engine.connect() as conn:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã users
            result = conn.execute(text("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables 
                    WHERE table_name = 'nodeon_users'
                );
            """))
            
            if not result.scalar():
                print("‚ùå –¢–∞–±–ª–∏—Ü–∞ nodeon_users –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—ã.")
                return False
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –¥–ª—è NDN –±–∞–ª–∞–Ω—Å–æ–≤
            print("üìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –¥–ª—è NDN...")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ balance_ndn –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            try:
                conn.execute(text("""
                    ALTER TABLE nodeon_users 
                    ADD COLUMN IF NOT EXISTS balance_ndn DECIMAL(15,2) DEFAULT 0.0;
                """))
                print("‚úÖ –ü–æ–ª–µ balance_ndn –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            except Exception as e:
                print(f"‚ö†Ô∏è –ü–æ–ª–µ balance_ndn —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ total_earned_ndn
            try:
                conn.execute(text("""
                    ALTER TABLE nodeon_users 
                    ADD COLUMN IF NOT EXISTS total_earned_ndn DECIMAL(15,2) DEFAULT 0.0;
                """))
                print("‚úÖ –ü–æ–ª–µ total_earned_ndn –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            except Exception as e:
                print(f"‚ö†Ô∏è –ü–æ–ª–µ total_earned_ndn —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ telegram_stars_balance
            try:
                conn.execute(text("""
                    ALTER TABLE nodeon_users 
                    ADD COLUMN IF NOT EXISTS telegram_stars_balance INTEGER DEFAULT 0;
                """))
                print("‚úÖ –ü–æ–ª–µ telegram_stars_balance –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            except Exception as e:
                print(f"‚ö†Ô∏è –ü–æ–ª–µ telegram_stars_balance —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ last_activity
            try:
                conn.execute(text("""
                    ALTER TABLE nodeon_users 
                    ADD COLUMN IF NOT EXISTS last_activity TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
                """))
                print("‚úÖ –ü–æ–ª–µ last_activity –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            except Exception as e:
                print(f"‚ö†Ô∏è –ü–æ–ª–µ last_activity —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
            print("üìà –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ stars_amount
            try:
                conn.execute(text("""
                    ALTER TABLE nodeon_transactions 
                    ADD COLUMN IF NOT EXISTS stars_amount INTEGER DEFAULT 0;
                """))
                print("‚úÖ –ü–æ–ª–µ stars_amount –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
            except Exception as e:
                print(f"‚ö†Ô∏è –ü–æ–ª–µ stars_amount —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ transaction_hash
            try:
                conn.execute(text("""
                    ALTER TABLE nodeon_transactions 
                    ADD COLUMN IF NOT EXISTS transaction_hash VARCHAR(255);
                """))
                print("‚úÖ –ü–æ–ª–µ transaction_hash –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
            except Exception as e:
                print(f"‚ö†Ô∏è –ü–æ–ª–µ transaction_hash —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –∫—É—Ä—Å–æ–≤ –æ–±–º–µ–Ω–∞
            print("üí± –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∫—É—Ä—Å–æ–≤ –æ–±–º–µ–Ω–∞...")
            
            conn.execute(text("""
                CREATE TABLE IF NOT EXISTS nodeon_exchange_rates (
                    id SERIAL PRIMARY KEY,
                    from_currency VARCHAR(10) NOT NULL,
                    to_currency VARCHAR(10) NOT NULL,
                    rate DECIMAL(10,4) NOT NULL,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                );
            """))
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ nodeon_exchange_rates —Å–æ–∑–¥–∞–Ω–∞")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞
            conn.execute(text("""
                INSERT INTO nodeon_exchange_rates (from_currency, to_currency, rate)
                VALUES ('stars', 'ndn', 1.0)
                ON CONFLICT DO NOTHING;
            """))
            print("‚úÖ –ë–∞–∑–æ–≤—ã–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
            print("üí≥ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤...")
            
            conn.execute(text("""
                CREATE TABLE IF NOT EXISTS nodeon_payment_requests (
                    id SERIAL PRIMARY KEY,
                    user_id INTEGER REFERENCES nodeon_users(id),
                    amount_stars INTEGER NOT NULL,
                    amount_ndn DECIMAL(15,2) NOT NULL,
                    status VARCHAR(20) DEFAULT 'pending',
                    telegram_payment_id VARCHAR(255),
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    completed_at TIMESTAMP
                );
            """))
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ nodeon_payment_requests —Å–æ–∑–¥–∞–Ω–∞")
            
            # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            print("üîç –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...")
            
            try:
                conn.execute(text("""
                    CREATE INDEX IF NOT EXISTS idx_users_balance_ndn 
                    ON nodeon_users(balance_ndn);
                """))
                print("‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è balance_ndn —Å–æ–∑–¥–∞–Ω")
            except Exception as e:
                print(f"‚ö†Ô∏è –ò–Ω–¥–µ–∫—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")
            
            try:
                conn.execute(text("""
                    CREATE INDEX IF NOT EXISTS idx_transactions_stars 
                    ON nodeon_transactions(stars_amount);
                """))
                print("‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è stars_amount —Å–æ–∑–¥–∞–Ω")
            except Exception as e:
                print(f"‚ö†Ô∏è –ò–Ω–¥–µ–∫—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            conn.commit()
            
            print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω –≤–µ—Ä—Å–∏–∏!")
            print("üìä –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–ª—è:")
            print("   - balance_ndn (–±–∞–ª–∞–Ω—Å NDN)")
            print("   - total_earned_ndn (–≤—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ)")
            print("   - telegram_stars_balance (–±–∞–ª–∞–Ω—Å Stars)")
            print("   - last_activity (–ø–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)")
            print("   - stars_amount (—Å—É–º–º–∞ –≤ Stars)")
            print("   - transaction_hash (—Ö—ç—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏)")
            print("   - –¢–∞–±–ª–∏—Ü—ã –∫—É—Ä—Å–æ–≤ –æ–±–º–µ–Ω–∞ –∏ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
            
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

if __name__ == "__main__":
    asyncio.run(update_database())

