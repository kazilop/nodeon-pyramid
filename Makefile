# NodeOn Pyramid - Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º

.PHONY: help install dev build deploy test clean setup-db setup-bot check

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON = python3
PIP = pip3
RAILWAY = railway

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED = \033[0;31m
GREEN = \033[0;32m
YELLOW = \033[1;33m
BLUE = \033[0;34m
NC = \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(BLUE)NodeOn Pyramid - –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è$(NC)"
	@echo "=================================="
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "$(GREEN)%-15s$(NC) %s\n", $$1, $$2}' $(MAKEFILE_LIST)

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(YELLOW)–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	$(PIP) install -r requirements.txt
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(YELLOW)–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	uvicorn main:app --reload --host 0.0.0.0 --port 8000

build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@echo "$(YELLOW)–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞...$(NC)"
	docker build -t nodeon-pyramid .
	@echo "$(GREEN)‚úÖ Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω$(NC)"

deploy: ## –î–µ–ø–ª–æ–π –Ω–∞ Railway
	@echo "$(YELLOW)–î–µ–ø–ª–æ–π –Ω–∞ Railway...$(NC)"
	$(RAILWAY) up
	@echo "$(GREEN)‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω$(NC)"

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "$(YELLOW)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	$(PYTHON) check_system.py

setup-db: ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
	@echo "$(YELLOW)–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	$(PYTHON) setup_database.py
	@echo "$(GREEN)‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞$(NC)"

setup-bot: ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram Bot
	@echo "$(YELLOW)–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Bot...$(NC)"
	$(PYTHON) setup_telegram_bot.py
	@echo "$(GREEN)‚úÖ Telegram Bot –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(NC)"

check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É
	@echo "$(YELLOW)–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	$(PYTHON) check_system.py

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Railway
	@echo "$(YELLOW)–õ–æ–≥–∏ Railway...$(NC)"
	$(RAILWAY) logs

shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Railway shell
	@echo "$(YELLOW)–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway shell...$(NC)"
	$(RAILWAY) shell

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "$(YELLOW)–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...$(NC)"
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -type d -name "*.egg-info" -exec rm -rf {} +
	@echo "$(GREEN)‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã$(NC)"

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ Docker
	@echo "$(YELLOW)–ó–∞–ø—É—Å–∫ –≤ Docker...$(NC)"
	docker run -p 8000:8000 --env-file .env nodeon-pyramid

docker-compose-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ docker-compose
	@echo "$(YELLOW)–ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ docker-compose...$(NC)"
	docker-compose up --build

docker-compose-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å docker-compose
	@echo "$(YELLOW)–û—Å—Ç–∞–Ω–æ–≤–∫–∞ docker-compose...$(NC)"
	docker-compose down

full-setup: install setup-db setup-bot check ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "$(GREEN)üéâ –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

migrate: deploy setup-db setup-bot check ## –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ –Ω–æ–≤—ã–π Railway
	@echo "$(GREEN)üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "$(YELLOW)–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	black *.py
	isort *.py

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º
	@echo "$(YELLOW)–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞...$(NC)"
	flake8 *.py
	mypy *.py

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
	@echo "$(BLUE)–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:$(NC)"
	@echo "Python: $$(python3 --version)"
	@echo "Pip: $$(pip3 --version)"
	@echo "Railway: $$(railway --version 2>/dev/null || echo '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"
	@echo "Docker: $$(docker --version 2>/dev/null || echo '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –±—ç–∫–∞–ø–∞
backup-db: ## –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(YELLOW)–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	$(PYTHON) backup_database.py

restore-db: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±—ç–∫–∞–ø–∞
	@echo "$(YELLOW)–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	$(PYTHON) restore_database.py

check-db: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(YELLOW)–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	$(PYTHON) check_database.py
